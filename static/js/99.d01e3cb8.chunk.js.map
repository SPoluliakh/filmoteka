{"version":3,"file":"static/js/99.d01e3cb8.chunk.js","mappings":"0NAEaA,EAAYC,EAAAA,GAAAA,IAAH,2GAIA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIVC,EAAcJ,EAAAA,GAAAA,GAAH,sEACb,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,MAAnB,IAICC,EAAaP,EAAAA,GAAAA,EAAH,uCACZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,MAAnB,I,6BCTCE,EAAS,WACpB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,MAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OAeR,IAbAE,EAAAA,EAAAA,YAAU,WACRL,EAAU,YACVM,EAAAA,EAAAA,IAAYH,GACTI,MAAK,SAAAC,GACJN,EAAcM,GACdR,EAAU,UACX,IACAS,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EAAU,WACX,GACJ,GAAE,CAACG,IAECF,EAAL,CAEA,IAAQY,EAAYZ,EAAWO,KAAvBK,QACR,OACE,gCACc,YAAXd,IAAwB,SAACe,EAAA,EAAD,IACb,YAAXf,GACCc,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,UAAC,EAAD,YACE,UAAC,EAAD,eAAkBF,EAAlB,QACA,UAAC,EAAD,eAAiBC,EAAjB,SAFiBC,EADT,IAMF,aAAXnB,GACqB,IAAnBc,EAAQM,SACP,SAACC,EAAA,EAAD,2DAfe,CAmBxB,C","sources":["components/Review/Review.styled.js","components/Review/Review.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RevieWrap = styled.div`\n  text-content: center;\n\n  :not(:last-child) {\n    padding-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const ReviewTitle = styled.h3`\n  color: ${p => p.theme.colors.navBcg};\n  text-decoration: underline;\n`;\n\nexport const ReviewText = styled.p`\n  color: ${p => p.theme.colors.navBcg};\n`;\n\n// export const NoInfoWrap = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n// `;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReview } from '../../Utils/Fetch';\nimport * as SC from './Review.styled';\nimport { NoInfoText } from '../NoInfo/NoInfo';\nimport Spiner from 'components/Spiner/Spiner';\n\nexport const Review = () => {\n  const [loader, setLoader] = useState(null);\n  const [reviewInfo, setReviewInfo] = useState(null);\n  const { filmId } = useParams();\n\n  useEffect(() => {\n    setLoader('pending');\n    fetchReview(filmId)\n      .then(data => {\n        setReviewInfo(data);\n        setLoader('resolve');\n      })\n      .catch(err => {\n        console.log(err);\n        setLoader('rejected');\n      });\n  }, [filmId]);\n\n  if (!reviewInfo) return;\n\n  const { results } = reviewInfo.data;\n  return (\n    <>\n      {loader === 'pending' && <Spiner />}\n      {loader === 'resolve' &&\n        results.map(({ author, content, id }) => (\n          <SC.RevieWrap key={id}>\n            <SC.ReviewTitle> {author} </SC.ReviewTitle>\n            <SC.ReviewText> {content} </SC.ReviewText>\n          </SC.RevieWrap>\n        ))}\n      {loader === 'rejected' ||\n        (results.length === 0 && (\n          <NoInfoText>Sorry, there is no detail information yet.</NoInfoText>\n        ))}\n    </>\n  );\n};\n"],"names":["RevieWrap","styled","p","theme","space","ReviewTitle","colors","navBcg","ReviewText","Review","useState","loader","setLoader","reviewInfo","setReviewInfo","filmId","useParams","useEffect","fetchReview","then","data","catch","err","console","log","results","Spiner","map","author","content","id","length","NoInfo"],"sourceRoot":""}