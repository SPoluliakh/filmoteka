{"version":3,"file":"static/js/44.0a7af47c.chunk.js","mappings":"oPAGaA,EAAYC,EAAAA,GAAAA,GAAH,uJAGJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACL,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGLC,EAAWJ,EAAAA,GAAAA,GAAH,oQAEW,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAChB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAWJE,EAAUL,EAAAA,GAAAA,IAAH,+HAGQ,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,MAAlB,IACA,SAAAN,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,MAAlB,IAGjBC,EAAYR,EAAAA,GAAAA,GAAH,+OACS,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,MAAlB,IACA,SAAAN,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,MAAlB,IACpB,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACQ,SAAAF,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,UAAnB,IACX,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMS,UAAUC,CAAtB,IAEL,SAAAX,GAAC,OAAIA,EAAEC,MAAMO,OAAOI,OAAnB,IAKCC,GAAOd,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAH,oIAED,SAAAC,GAAC,OAAIA,EAAEC,MAAMc,QAAQC,SAApB,IAMJC,EAASlB,EAAAA,GAAAA,IAAH,+JAIG,SAAAC,GAAC,OAAIA,EAAEC,MAAMO,OAAOU,UAAnB,IACZ,SAAAlB,GAAC,OAAIA,EAAEC,MAAMO,OAAOW,MAAnB,IACO,SAAAnB,GAAC,OAAIA,EAAEC,MAAMI,MAAMe,SAAlB,IACH,SAAApB,GAAC,OAAIA,EAAEC,MAAMoB,YAAYC,MAAxB,I,uCCxDLC,EAAoB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,EAAD,UACGF,EAAKG,KAAI,SAAAC,GAAI,OACZ,UAAC,EAAD,YACE,UAAC,EAAD,CAASC,GAAE,kBAAaD,EAAKA,KAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAAvD,WACE,SAAC,EAAD,CACEQ,IACEL,EAAKA,KAAKM,YAAV,sCACmCC,EAAAA,EADnC,YAC+CP,EAAKA,KAAKM,aACrDE,EAENC,IAAKT,EAAKA,KAAKU,SAEjB,SAAC,EAAD,UAAeV,EAAKA,KAAKU,YAE3B,SAAC,EAAD,UAAYV,EAAKA,KAAKW,aAAaC,QAAQ,OAZ3BZ,EAAKA,KAAKE,GADhB,KAkBnB,E,oBCxBYW,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,QAAO,WACxB,GAAyBC,EAAAA,EAAAA,WAAS,WAChC,IAAMhB,EAAOiB,KAAKC,MAAMC,aAAaC,QAAQN,EAASO,UAEtD,cAAOrB,QAAP,IAAOA,EAAAA,EAAQ,EAChB,IAJMsB,GAAP,eAMA,OACE,SAACC,EAAA,EAAD,CAAKC,UAAU,YAAYC,GAAG,OAAOC,GAAG,OAAxC,SACGJ,EAAeK,OAAS,GACvB,SAAChC,EAAD,CAAmBC,KAAM0B,KAEzB,SAACM,EAAA,EAAD,kDAIP,C","sources":["components/FavoriteMovieList/FavoriteMovieList.style.js","components/FavoriteMovieList/FavoriteMoviesList.jsx","Pages/Favorite.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -${p => p.theme.space[2]}px;\n  margin-top: -${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[0]}px;\n  padding-top: ${p => p.theme.space[6]}px;\n`;\n\nexport const ListItem = styled.li`\n  position: relative;\n  flex-basis: calc(100% / 5 - ${p => p.theme.space[2]}px);\n  margin-left: ${p => p.theme.space[2]}px;\n  margin-top: ${p => p.theme.space[2]}px;\n  display: flex;\n  flex-direction: column;\n\n  transition: scale, 250ms, liner;\n  :hover,\n  :focus {\n    scale: 1.02;\n  }\n`;\n\nexport const ItemImg = styled.img`\n  width: 100%;\n  object-fit: cover;\n  border-top-left-radius: ${p => p.theme.radii.normal};\n  border-top-right-radius: ${p => p.theme.radii.normal};\n`;\n\nexport const ItemTitle = styled.h2`\n  border-bottom-left-radius: ${p => p.theme.radii.normal};\n  border-bottom-right-radius: ${p => p.theme.radii.normal};\n  padding: ${p => p.theme.space[2]}px;\n  background-color: ${p => p.theme.colors.background};\n  margin: ${p => p.theme.space[0]}px;\n  font-size: ${p => p.theme.fontSizes.s}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.primary};\n\n  flex-grow: 1;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  box-shadow: ${p => p.theme.shadows.boxShadow};\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  background-color: ${p => p.theme.colors.activeText};\n  color: ${p => p.theme.colors.navBcg};\n  border-radius: ${p => p.theme.radii.ratingVew};\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n","import * as SC from './FavoriteMovieList.style';\nimport PropTypes from 'prop-types';\nimport NoImg from '../../components/NoImg/no-photo.png';\nimport { useLocation } from 'react-router-dom';\nimport { imgWidth } from 'Utils/imgWidth';\n\nexport const FavoriteMovieList = ({ list }) => {\n  const location = useLocation();\n\n  return (\n    <SC.MovieList>\n      {list.map(data => (\n        <SC.ListItem key={data.data.id}>\n          <SC.Link to={`/movies/${data.data.id}`} state={{ from: location }}>\n            <SC.ItemImg\n              src={\n                data.data.poster_path\n                  ? `https://image.tmdb.org/t/p/w${imgWidth}/${data.data.poster_path}`\n                  : NoImg\n              }\n              alt={data.data.title}\n            />\n            <SC.ItemTitle>{data.data.title}</SC.ItemTitle>\n          </SC.Link>\n          <SC.Rating>{data.data.vote_average.toFixed(2)}</SC.Rating>\n        </SC.ListItem>\n      ))}\n    </SC.MovieList>\n  );\n};\n\nFavoriteMovieList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number,\n      release_date: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useRef } from 'react';\nimport { FavoriteMovieList } from 'components/FavoriteMovieList/FavoriteMoviesList';\nimport { NoInfoText } from '../components/NoInfo/NoInfo';\nimport { Box } from 'Utils/Box';\n\nexport const Favorite = () => {\n  const favorite = useRef('myFilms');\n  const [favoriteMovies] = useState(() => {\n    const data = JSON.parse(localStorage.getItem(favorite.current));\n\n    return data ?? [];\n  });\n\n  return (\n    <Box className=\"container\" pt=\"43px\" pb=\"13px\">\n      {favoriteMovies.length > 0 ? (\n        <FavoriteMovieList list={favoriteMovies} />\n      ) : (\n        <NoInfoText> There is no favorite movies yet. </NoInfoText>\n      )}\n    </Box>\n  );\n};\n"],"names":["MovieList","styled","p","theme","space","ListItem","ItemImg","radii","normal","ItemTitle","colors","background","fontSizes","s","primary","Link","NavLink","shadows","boxShadow","Rating","activeText","navBcg","ratingVew","fontWeights","medium","FavoriteMovieList","list","location","useLocation","map","data","to","id","state","from","src","poster_path","imgWidth","NoImg","alt","title","vote_average","toFixed","Favorite","favorite","useRef","useState","JSON","parse","localStorage","getItem","current","favoriteMovies","Box","className","pt","pb","length","NoInfo"],"sourceRoot":""}